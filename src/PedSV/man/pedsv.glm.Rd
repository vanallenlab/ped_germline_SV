% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assoc.R
\name{pedsv.glm}
\alias{pedsv.glm}
\title{PedSV generic association test}
\usage{
pedsv.glm(
  meta,
  X,
  Y,
  use.N.pcs = 4,
  family = gaussian(),
  extra.terms = NULL,
  firth.fallback = TRUE,
  strict.fallback = TRUE,
  nonstrict.se.tolerance = 10,
  firth.always = FALSE,
  return.all.coefficients = FALSE
)
}
\arguments{
\item{meta}{Sample metadata loaded with \link{load.sample.metadata}}

\item{X}{Vector of values for primary independent variable. See \link{prep.glm.matrix}.}

\item{Y}{Vector of values for dependent variable. See \link{prep.glm.matrix}.}

\item{use.N.pcs}{Specify how many principal components should be adjusted in
model [default: 4]}

\item{family}{\code{family} parameter passed to \link{glm}}

\item{extra.terms}{Extra covariate terms to include in model. See \link{prep.glm.matrix}.}

\item{firth.fallback}{Attempt to use Firth bias-reduced logistic regression when
traditional logistic regression fails to converge or dataset is quasi-separable
[default: TRUE]}

\item{strict.fallback}{Implement Firth regression if a standard logit model returns
any errors or warnings. Setting this to \code{FALSE} will only default to Firth
regression if logit returns any errors or if the standard error of the genotype
coefficient exceeds \code{nonstrict.se.tolerance} [default: TRUE]}

\item{nonstrict.se.tolerance}{If \code{strict.fallback} is \code{FALSE}, only use Firth
regression if a standard logit model produces a genotype effect standard error
exceeding this value [default: 10]}

\item{firth.always}{Always use Firth regression [default: FALSE]}

\item{return.fit.summary}{Return the full summary of the fitted model. Only recommended
for debugging purposes. Not recommended for analysis. [default: FALSE]}
}
\value{
Named vector of test statsitics corresponding to independent variable
}
\description{
Fit a GLM for user-defined dependent & independent variables while adjusting
for standard sample covariates
}
\seealso{
\link{prep.glm.matrix}
}
